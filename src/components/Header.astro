---
export interface Props {
  minimal?: boolean;
  backHref?: string;
  navLabels: {
    about: string;
    projects: string;
    services: string;
    contact: string;
  };
}
const { minimal = false, backHref = '/', navLabels = { about: '', projects: '', services: '', contact: '' } } = Astro.props;
---

{minimal ? (
  <header class="w-full fixed top-0 left-0 z-50 bg-white h-20 flex items-center border-b border-gray-200 shadow-md">
    <div class="max-w-7xl mx-auto px-6 md:px-12 flex items-center justify-between w-full h-20">
      <a href={backHref} class="flex items-center text-gray-900 hover:text-black transition-colors">
        <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round"><path d="M15 19l-7-7 7-7"/></svg>
        <span class="text-base font-medium">Back</span>
      </a>
      <div class="flex-1 flex justify-center">
        <a href="/" class="text-lg font-bold text-gray-900">Logo</a>
      </div>
      <div class="w-[88px] md:w-[112px]"></div>
    </div>
  </header>
) : (
  <header
    id="header"
    class="w-full fixed top-0 left-0 z-50 bg-black backdrop-blur-md transition-all duration-300"
  >
    <div
      class="max-w-7xl mx-auto px-6 md:px-12 flex justify-center md:justify-between items-center h-20"
    >
      <!-- Logo -->
      <a href="/" class="flex items-center">
        <div>Logo</div>
      </a>
      
      <!-- Navigation -->
      <nav class="hidden md:flex space-x-12 text-xl font-regular">
        <a
          href="#about"
          class="relative font-medium text-white flex flex-col items-center group transition-colors duration-300"
        >
          {navLabels.about}
          <span
            class="absolute left-1/2 -translate-x-1/2 bottom-[-9px] w-2 h-2 rounded-full bg-white opacity-0 scale-75 group-hover:opacity-100 group-hover:scale-100 group-focus:opacity-100 group-focus:scale-100 transition-all duration-300"
          ></span>
        </a>
        <a
          href="#projects"
          class="relative font-medium text-white flex flex-col items-center group transition-colors duration-300"
        >
          {navLabels.projects}
          <span
            class="absolute left-1/2 -translate-x-1/2 bottom-[-9px] w-2 h-2 rounded-full bg-white opacity-0 scale-75 group-hover:opacity-100 group-hover:scale-100 group-focus:opacity-100 group-focus:scale-100 transition-all duration-300"
          ></span>
        </a>
        <a
          href="#services"
          class="relative font-medium text-white flex flex-col items-center group transition-colors duration-300"
        >
          {navLabels.services}
          <span
            class="absolute left-1/2 -translate-x-1/2 bottom-[-9px] w-2 h-2 rounded-full bg-white opacity-0 scale-75 group-hover:opacity-100 group-hover:scale-100 group-focus:opacity-100 group-focus:scale-100 transition-all duration-300"
          ></span>
        </a>

        <a
          href="#contact"
          class="relative font-medium text-white flex flex-col items-center group transition-colors duration-300"
        >
          {navLabels.contact}
          <span
            class="absolute left-1/2 -translate-x-1/2 bottom-[-9px] w-2 h-2 rounded-full bg-white opacity-0 scale-75 group-hover:opacity-100 group-hover:scale-100 group-focus:opacity-100 group-focus:scale-100 transition-all duration-300"
          ></span>
        </a>
        <div class="flex space-x-2 ml-6">
          {Astro.url.pathname === '/de/' ? (
            <a href="/" class="text-white hover:underline">EN</a>
          ) : (
            <a href="/" class="text-white font-bold underline">EN</a>
          )}
          <a class="text-white select-none pointer-events-none">|</a>
          {Astro.url.pathname === '/de/' ? (
            <a href="/de/" class="text-white font-bold underline">DE</a>
          ) : (
            <a href="/de/" class="text-white hover:underline">DE</a>
          )}
        </div>
      </nav>
    </div>

  
  </header>
)}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const header = document.getElementById('header');
    if (!header) return;

    const logo = header.querySelector('a[href="/"]');
    const navLinks = header.querySelectorAll('nav a');
    const navDots = header.querySelectorAll('nav span');

    function updateHeaderStyle() {
      if (!header) return;

      const scrollY = window.scrollY;

      if (scrollY > 50) {
        // Scrolled
        header.classList.remove('bg-black');
        header.classList.add('bg-white', 'shadow-md');

        // Logo black
        if (logo) {
          logo.classList.remove('text-white');
          logo.classList.add('text-gray-900');
        }

        // Links black
        navLinks.forEach((link) => {
          link.classList.remove('text-white');
          link.classList.add('text-gray-900');
        });

        // Dots black
        navDots.forEach((dot) => {
          dot.classList.remove('bg-white');
          dot.classList.add('bg-black');
        });
      } else {
        // Static - black background
        header.classList.remove('bg-white', 'shadow-md');
        header.classList.add('bg-black');

        // Logo white
        if (logo) {
          logo.classList.remove('text-gray-900');
          logo.classList.add('text-white');
        }

        // Links white
        navLinks.forEach((link) => {
          link.classList.remove('text-gray-900');
          link.classList.add('text-white');
        });

        // Dots white
        navDots.forEach((dot) => {
          dot.classList.remove('bg-black');
          dot.classList.add('bg-white');
        });
      }
    }

    // Initialization
    updateHeaderStyle();

    // Scroll listener
    window.addEventListener('scroll', updateHeaderStyle);

    // Smooth scroll to sections
    const smoothScrollLinks = document.querySelectorAll('a[href^="#"]');

    smoothScrollLinks.forEach((link) => {
      link.addEventListener('click', function (e) {
        e.preventDefault();

        const targetId = (e.currentTarget as HTMLAnchorElement).getAttribute(
          'href'
        );
        const targetSection = document.querySelector(
          targetId || ''
        ) as HTMLElement;

        if (targetSection) {
          const headerHeight = header.offsetHeight;
          const targetPosition = targetSection.offsetTop - headerHeight;

          // Убираем фокус с ссылки чтобы точка исчезла
          (e.currentTarget as HTMLAnchorElement).blur();

          window.scrollTo({
            top: targetPosition,
            behavior: 'smooth',
          });
        }
      });
    });
  });
</script>
</script>
