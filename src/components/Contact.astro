<section class="py-10 lg:py-20 bg-gray-50" id="contact">
  <div class="w-full max-w-[1280px] mx-auto px-6">
    <!-- Header -->
    <div class="mb-16" data-aos="fade-up">
      <p
        class="text-[36px] text-center lg:text-left mb-3 text-black font-light"
      >
        Contact
      </p>
      <h2
        class="xl:text-[90px] text-4xl sm:text-5xl lg:text-6xl mb-3 sm:mb-5 text-center lg:text-left font-bold font-montserrat text-black"
      >
        Get in Touch with Me!
      </h2>
    </div>

    <div class="grid lg:grid-cols-5 gap-8 items-start">
      <!-- Contact Info Card - Takes 2 columns, more compact -->
      <div
        class="lg:col-span-2 bg-gray-200 rounded-2xl p-6"
        data-aos="fade-right"
      >
        <!-- Office Location -->
        <div class="mb-6">
          <div class="w-6 h-6 mb-3">
            <svg
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              class="text-gray-600"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
              ></path>
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
            </svg>
          </div>
          <h3 class="text-base font-semibold text-gray-900 mb-1">
            Our Office:
          </h3>
          <p class="text-sm text-gray-600">
            Available for remote work worldwide
          </p>
        </div>

        <!-- Contact Number -->
        <div class="mb-6">
          <div class="w-6 h-6 mb-3">
            <svg
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              class="text-gray-600"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
              ></path>
            </svg>
          </div>
          <h3 class="text-base font-semibold text-gray-900 mb-1">
            Contact Number:
          </h3>
          <p class="text-sm text-gray-600">Available via email</p>
        </div>

        <!-- Email -->
        <div>
          <div class="w-6 h-6 mb-3">
            <svg
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              class="text-gray-600"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
              ></path>
            </svg>
          </div>
          <h3 class="text-base font-semibold text-gray-900 mb-1">Email Us:</h3>
          <p class="text-sm text-gray-600">karamanets.bogdan@gmail.com</p>
        </div>
      </div>

      <!-- Contact Form - Takes 3 columns, wider with border -->
      <div
        class="lg:col-span-3 border border-gray-200 rounded-2xl p-8 bg-white"
        data-aos="fade-left"
      >
        <div
          id="snackbar"
          class="fixed right-8 bottom-8 z-50 min-w-[220px] max-w-xs px-5 py-3 rounded-lg bg-green-600 text-white font-medium shadow-xl opacity-0 pointer-events-none transition-all duration-200 ease-in-out scale-95 flex items-center gap-2"
          style="box-shadow: 0 6px 24px 0 rgba(0,0,0,0.12);"
        >
          <svg
            class="w-5 h-5 text-white flex-shrink-0"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M5 13l4 4L19 7"></path>
          </svg>
          <span>Thank you! Your message has been sent.</span>
        </div>
        <form
          class="space-y-6"
          name="contact"
          method="POST"
          data-netlify="true"
          netlify-honeypot="bot-field"
          id="contactForm"
          novalidate
        >
          <input type="hidden" name="form-name" value="contact" />
          <div style="display: none;">
            <label>Don't fill this out: <input name="bot-field" /></label>
          </div>

          <!-- Name and Email Row -->
          <div class="grid md:grid-cols-2 gap-6">
            <div>
              <label
                for="name"
                class="block text-sm font-medium text-gray-700 mb-2"
              >
                Full Name
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-1 focus:ring-gray-400 focus:border-gray-400 transition-colors placeholder-gray-400"
                placeholder="Steve Miller"
              />
              <p id="nameError" class="text-red-500 text-xs mt-1"></p>
            </div>
            <div>
              <label
                for="email"
                class="block text-sm font-medium text-gray-700 mb-2"
              >
                Email Address
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-1 focus:ring-gray-400 focus:border-gray-400 transition-colors placeholder-gray-400"
                placeholder="hello@websitename.com"
              />
              <p id="emailError" class="text-red-500 text-xs mt-1"></p>
            </div>
          </div>

          <!-- Subject -->
          <div>
            <label
              for="subject"
              class="block text-sm font-medium text-gray-700 mb-2"
            >
              Subject
            </label>
            <input
              type="text"
              id="subject"
              name="subject"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-1 focus:ring-gray-400 focus:border-gray-400 transition-colors placeholder-gray-400"
              placeholder="Question!"
            />
            <p id="subjectError" class="text-red-500 text-xs mt-1"></p>
          </div>

          <!-- Message -->
          <div>
            <label
              for="message"
              class="block text-sm font-medium text-gray-700 mb-2"
            >
              Your Message
            </label>
            <textarea
              id="message"
              name="message"
              rows="6"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-1 focus:ring-gray-400 focus:border-gray-400 transition-colors placeholder-gray-400 resize-none"
              placeholder="Write Your message"></textarea>
            <p id="messageError" class="text-red-500 text-xs mt-1"></p>
          </div>

          <!-- Submit Button -->
          <button
            type="submit"
            class="border-[2px] border-black text-black px-8 py-3 rounded-full font-medium tracking-wider uppercase hover:bg-black hover:text-white transition-colors duration-300"
          >
            Send Message
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  import AOS from 'aos';
  document.addEventListener('DOMContentLoaded', function () {
    AOS.init({
      duration: 1000,
      once: true,
    });

    // Snackbar logic
    function showSnackbar() {
      const snackbar = document.getElementById('snackbar');
      if (snackbar) {
        snackbar.classList.remove(
          'opacity-0',
          'pointer-events-none',
          'scale-95'
        );
        snackbar.classList.add('opacity-100', 'scale-100');
        setTimeout(() => {
          snackbar.classList.add(
            'opacity-0',
            'pointer-events-none',
            'scale-95'
          );
          snackbar.classList.remove('opacity-100', 'scale-100');
        }, 1800); // Faster hide (1.8s)
      }
    }

    // Validation logic
    const form = document.getElementById('contactForm');
    if (form) {
      form.addEventListener('submit', function (e) {
        let valid = true;

        // Cast form to HTMLFormElement for type safety
        const formEl = form as HTMLFormElement;

        // Name validation
        const nameInput = formEl.elements.namedItem(
          'name'
        ) as HTMLInputElement | null;
        const name = nameInput ? nameInput.value.trim() : '';
        const nameError = document.getElementById('nameError');
        if (nameError) {
          if (!name) {
            nameError.textContent = 'Full Name is required.';
            valid = false;
          } else if (name.length < 2) {
            nameError.textContent = 'Full Name must be at least 2 characters.';
            valid = false;
          } else {
            nameError.textContent = '';
          }
        }

        // Email validation
        const emailInput = formEl.elements.namedItem(
          'email'
        ) as HTMLInputElement | null;
        const email = emailInput ? emailInput.value.trim() : '';
        const emailError = document.getElementById('emailError');
        const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (emailError) {
          if (!email) {
            emailError.textContent = 'Email Address is required.';
            valid = false;
          } else if (!emailPattern.test(email)) {
            emailError.textContent = 'Please enter a valid email address.';
            valid = false;
          } else {
            emailError.textContent = '';
          }
        }

        // Subject validation
        const subjectInput = formEl.elements.namedItem(
          'subject'
        ) as HTMLInputElement | null;
        const subject = subjectInput ? subjectInput.value.trim() : '';
        const subjectError = document.getElementById('subjectError');
        if (subjectError) {
          if (!subject) {
            subjectError.textContent = 'Subject is required.';
            valid = false;
          } else {
            subjectError.textContent = '';
          }
        }

        // Message validation
        const messageInput = formEl.elements.namedItem(
          'message'
        ) as HTMLTextAreaElement | null;
        const message = messageInput ? messageInput.value.trim() : '';
        const messageError = document.getElementById('messageError');
        if (messageError) {
          if (!message) {
            messageError.textContent = 'Message is required.';
            valid = false;
          } else if (message.length < 10) {
            messageError.textContent =
              'Message must be at least 10 characters.';
            valid = false;
          } else {
            messageError.textContent = '';
          }
        }

        if (!valid) {
          e.preventDefault();
        } else {
          e.preventDefault(); // Prevent Netlify default submit for snackbar UX
          showSnackbar();
          formEl.reset();
        }
      });
    }
  });
</script>
